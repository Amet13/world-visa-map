#!/bin/bash

OUTPUT_FILE="js/data.js"
INPUT_FILE="csv/countries.csv"
DATASET_FILE="csv/dataset.csv"
PHANTOMJS_FILE="js/getdata.js"

phantomjs ${PHANTOMJS_FILE} | \
grep "For passport" | \
awk -F "\"" '{print $(NF-1) $(NF)}' | \
sed -r 's/>/, \"/g; s/<\/td, //g' > ${DATASET_FILE} && \
echo "Successfully generated ${DATASET_FILE}"

echo "// autogenerated by generate.bash" > ${OUTPUT_FILE}
echo "var data = [" >> ${OUTPUT_FILE}

while read COUNTRY; do
    STATE=$(grep "${COUNTRY}" ${DATASET_FILE} | awk -F\" '{print $2}')
    case ${STATE} in
        "eTA") #yellow
            STATE_NUM=1
            ;;
        "e-Visa") #yellow
            STATE_NUM=2
            ;;
        "visa-free") #green
            STATE_NUM=3
            ;;
        "Visa waiver on arrival") #green
            STATE_NUM=4
            ;;
        "visa on arrival") #blue
            STATE_NUM=5
            ;;
        "visa on arrival / eVisa") #blue
            STATE_NUM=6
            ;;
        "visa required") #red
            STATE_NUM=7
            ;;
        "visa required / eVisa") #red
            STATE_NUM=8
            ;;
        *)
            STATE_NUM=9
            ;;
    esac
    case ${COUNTRY} in
        "EH")
            STATE_NUM=3
            ;;
        "GL" | "PR" | "GB")
            STATE_NUM=7
            ;;
        "RU")
            STATE_NUM=10
            ;;
        *)
            ;;
    esac

    echo "    ['${COUNTRY}', ${STATE_NUM}]," | tr '[:upper:]' '[:lower:]' >> ${OUTPUT_FILE}
done < <(tr '[:lower:]' '[:upper:]' < ${INPUT_FILE})

echo "];" >> ${OUTPUT_FILE}

echo "Successfully generated ${OUTPUT_FILE}"

exit 0